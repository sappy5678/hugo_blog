<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on sappy blog</title><link>https://blog.sappy.tw/posts/</link><description>Recent content in Posts on sappy blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 11 Apr 2020 18:13:30 +0000</lastBuildDate><atom:link href="https://blog.sappy.tw/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>社群網路筆記 賽局理論</title><link>https://blog.sappy.tw/posts/%E7%A4%BE%E7%BE%A4%E7%B6%B2%E8%B7%AF_%E8%B3%BD%E5%B1%80/</link><pubDate>Sat, 11 Apr 2020 18:13:30 +0000</pubDate><guid>https://blog.sappy.tw/posts/%E7%A4%BE%E7%BE%A4%E7%B6%B2%E8%B7%AF_%E8%B3%BD%E5%B1%80/</guid><description>賽局理論最大的特色在於，他有許多決策者 名詞 Player Strategies Payoff Payoff Matrix 目前先考慮 one shot game player 同時下決策，且 player 之間的決策過程是獨立的 幾個假設 player 只關注如何最大化自身利</description><content type="html"><![CDATA[<p>賽局理論最大的特色在於，他有許多決策者</p>
<h1 id="名詞">名詞</h1>
<ol>
<li>Player</li>
<li>Strategies</li>
<li>Payoff</li>
<li>Payoff Matrix</li>
</ol>
<p>目前先考慮 one shot game
player 同時下決策，且 player 之間的決策過程是獨立的</p>
<p>幾個假設</p>
<ol>
<li>player 只關注如何最大化自身利益 - rationality</li>
<li>player 不關心他人或集體的利益</li>
<li>player 能完整知道整個 game 的訊息(也有不知道所有訊息的 game)</li>
</ol>
<p>TODO 例子</p>
<h1 id="best-responses--dominant-strategies">Best Responses &amp; Dominant Strategies</h1>
<p>當其他人選 T 時， S 是最好的選擇</p>
<h1 id="strictly-dominant-strategy">Strictly Dominant Strategy</h1>
<p>無論其他怎麼選，都是最優的選項
最優的選項 - 大於其他所有選項</p>
<p>TODO 例子 - 囚犯困境 - 都有Strictly Dominant Strategy</p>
<p>TODO 例子 - 只有一方有 Strictly Dominant Strategy</p>
<h1 id="nash-equilibrium">Nash Equilibrium</h1>
<p>解決都不存在 Strictly Dominant Strategy 的狀況</p>
<p>在這組決策下，沒有任何一方能夠通過改變自己的決策獲取更多利益，使其他人沒有動機改變決策</p>
<p>TODO 三人例子</p>
<p>找 Nash 的方法</p>
<ol>
<li>暴力搜尋所有組合</li>
<li>找每一個人的所有 best responses，並交集所有人的 best responses - 比較好的方法</li>
</ol>
<h2 id="coordination-game---多個-nash-equilibrium">coordination game - 多個 Nash Equilibrium</h2>
<p>TODO 變種 + 特例
<a href="https://en.wikipedia.org/wiki/Coordination_game">https://en.wikipedia.org/wiki/Coordination_game</a></p>
<ol>
<li>Coordination game</li>
<li>Unbalanced coordination game</li>
<li>Battle of the sexes</li>
<li>Mis-coordination games - 如果沒協調好的話，追求最大利益的反而懲罰越大</li>
</ol>
<h1 id="mixed-strategies">Mixed strategies</h1>
<p>引入機率，讓對手更難預測自身的行為 -&gt; 讓對手選哪個選項 payoff 都相同(indifference)
透過引入機率，解決沒有 Nash Equilibrium 的問題
之前的決策沒有機率，所以撐過 pure strategies</p>
<p>TODO 例子 - pennies game</p>
<p>zero sum 零和遊戲 - payoff 加總唯一常數</p>
<p>TODO 例子</p>
<p>!!! 在有限的 player 跟 有限的策略時，一定有 mixed strategiy equilibrium</p>
<p>TODO 有兩個 mixed Nash Equilibrium 的例子</p>
<p>找Nash 的方法</p>
<ol>
<li>先用 pure strategies 方式去找</li>
<li>找不到再用 mixed</li>
</ol>
<h1 id="pareto-optimality">Pareto Optimality</h1>
<p>考慮整體的利益，不一定能達到整體最好，但能達到局部最好
當存在一種組合，使每個人的 payoff 都比現在的組合好的時候，現在的組合即不是 pareto optimality</p>
<p>TODO 例子</p>
<h1 id="social-optimal">Social Optimal</h1>
<p>把每個人的 payoff 加總，最大的那個組合</p>
<p>TODO 證明 如果是 social optimal 則一定是 pareto optimal</p>
<h1 id="dominated-strategies">Dominated Strategies</h1>
<p>注意 Dominated strategies != Dominant Strategies
即有選擇全面的比現有選擇還要好，主要用來降低 Game 的分析複雜度</p>
<p>TODO 例子</p>
<p>策略組合 = outcome = choice of strategy = joint strategy = strategy profile = strategy combination = action profile</p>
<h2 id="證明">證明</h2>
<ol>
<li>有沒有可能把 Nash Equilibrium 刪了?</li>
<li>有沒有可能剩下的 Nash Equilibrium 原本不是 Nash Equilibrium</li>
</ol>
<h1 id="weekly-dominate-strategies">Weekly Dominate Strategies</h1>
<p>即 &gt;=</p>
<h1 id="dynamic-game">Dynamic Game</h1>
<p>不同時執行
之前的 game 又叫做 normal form = strategic game = matrix game
現在 Game 叫做 Dynamic game = extensive form</p>
<p>解法</p>
<ol>
<li>動態規劃解，由下往上 - 這比較好 - Backward induction</li>
<li>轉成 matrix 解 - 有些解不存在，會有多的 Nash Equilibrium</li>
</ol>
<h1 id="subgame-perfect-equilibrium">Subgame perfect equilibrium</h1>
<p>在所有 subgame 中都是最好的
Subgame perfect equilibrium 是 Nash
但 Nash 不一定是 Subgame perfect equilibrium</p>
<p>QQAQQQQQQ</p>
]]></content></item><item><title>社群網路筆記 1</title><link>https://blog.sappy.tw/posts/%E7%A4%BE%E7%BE%A4%E7%B6%B2%E8%B7%AF%E7%AD%86%E8%A8%98_1/</link><pubDate>Tue, 31 Mar 2020 23:49:20 +0000</pubDate><guid>https://blog.sappy.tw/posts/%E7%A4%BE%E7%BE%A4%E7%B6%B2%E8%B7%AF%E7%AD%86%E8%A8%98_1/</guid><description>社群網路的重要理論 The small world property - 六度空間法則，任兩點之間平均過六格就能抵達對面 ?? 但是，在規模多大內才有效? Scale-free, power-law degree distributions - power law，所有點的 degree 分布圖，</description><content type="html"><![CDATA[<h1 id="社群網路的重要理論">社群網路的重要理論</h1>
<ol>
<li>The small world property - 六度空間法則，任兩點之間平均過六格就能抵達對面 ?? 但是，在規模多大內才有效?</li>
<li>Scale-free, power-law degree distributions  - power law，所有點的 degree 分布圖，會呈現平方下降</li>
<li>Relatively large clustering coefficient - 三個點都相連會比只有兩條邊的數量要多</li>
<li>Assortative mixing and homophily - 相似度計算</li>
<li>Existence of community structures - 小群體的結構</li>
</ol>
<p>centralities - 中心，影響力，重要性</p>
<ol>
<li>Degree centrality , 用 degree 描述 =&gt; 不理想，不是所有 Neighbor 都一樣重要</li>
<li>pagerank</li>
<li>Closeness, 其他點到該點倒數距離的平方</li>
<li>Betweenness, 最多最短路徑經過的節點</li>
</ol>
<p>power law</p>
<p>small world - Six degrees of separation</p>
<p>[] TODO &ndash; 看影片
Homophily - 相似度</p>
<p>Community detection algorithms</p>
]]></content></item><item><title>用 QEMU 建立VM</title><link>https://blog.sappy.tw/posts/%E7%94%A8qemu%E5%BB%BA%E7%AB%8Bvm/</link><pubDate>Sun, 29 Mar 2020 23:49:20 +0000</pubDate><guid>https://blog.sappy.tw/posts/%E7%94%A8qemu%E5%BB%BA%E7%AB%8Bvm/</guid><description>緣由 練習 QEMU 安裝 目前有兩款比較熱門的跨平台 terminal hyper terminus 就顏質跟設定方便度而言，我選擇了後者，也就是 terminus 建立VM並開機 使用 chocolatey 安裝 choco install terminus 安裝 powershell core， choco</description><content type="html"><![CDATA[<h1 id="緣由">緣由</h1>
<p>練習 QEMU</p>
<h1 id="安裝">安裝</h1>
<p>目前有兩款比較熱門的跨平台 terminal</p>
<ol>
<li><a href="https://hyper.is/">hyper</a></li>
<li><a href="https://eugeny.github.io/terminus/">terminus</a></li>
</ol>
<p>就顏質跟設定方便度而言，我選擇了後者，也就是 <a href="https://eugeny.github.io/terminus/">terminus</a></p>
<h2 id="建立vm並開機">建立VM並開機</h2>
<ol>
<li>使用 <a href="https://chocolatey.org/">chocolatey</a> 安裝
<code>choco install terminus</code></li>
<li>安裝 <a href="https://github.com/PowerShell/PowerShell">powershell core</a>，
<code>choco install powershell-core</code></li>
<li>安裝 <a href="https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts">nerd fonts</a> 中任意喜歡的字體
我個人比較推 <code>FiraCode</code> <code>SourceCodePro</code> <code>CascadiaCode</code> 這三款</li>
<li>打開 terminus，在 terminus 的設定 -&gt; 外觀 -&gt; 字體上選擇字體</li>
</ol>
<p>開機</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">qemu-img create -f qcow2 1.qcow2 40G

qemu-system-x86_64 --enable-kvm -hda 1.qcow2 -m <span class="m">1024</span> -net nic,model<span class="o">=</span>virtio -net user,hostfwd<span class="o">=</span>tcp::2223-:22 -cdrom ../ubuntu-16.04.6-desktop-amd64.iso -vga std -cpu host -smp 4,cores<span class="o">=</span>4,threads<span class="o">=</span>1,sockets<span class="o">=</span>4,maxcpus<span class="o">=</span><span class="m">16</span> -boot <span class="nv">strict</span><span class="o">=</span>on
</code></pre></div><p>必要安裝</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt install openssh-server

sudo sed -i <span class="s1">&#39;s/APT::Periodic::Update-Package-Lists &#34;1&#34;/APT::Periodic::Update-Package-Lists &#34;0&#34;/&#39;</span> /etc/apt/apt.conf.d/20auto-upgrades

</code></pre></div><p>安裝 tensorflow
&ndash;no-cache-dir tensorflow 是為了修正 memory error 的 bug</p>
<pre><code>pip3 install --no-cache-dir tensorflow
</code></pre><p>編譯 kernel</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">uname -r

mkdir kernel
<span class="nb">cd</span> kernel

wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.6.2.tar.xz

tar Jxvf linux-5.6.2.tar.xz

sudo mv linux-5.6.2/ /usr/src/

sudo apt install fakeroot build-essential libncurses5-dev kernel-package openssl bison flex libssl-dev

<span class="nb">cd</span> /usr/src/linux-5.6.2

<span class="c1"># sudo cp /boot/config-`uname -r` ./.config</span>

<span class="c1"># make oldconfig</span>

touch REPORTING-BUGS

make menuconfig

sudo fakeroot make-kpkg -j4 --initrd kernel_image kernel_headers
sudo fakeroot make-kpkg -j32 --initrd kernel_image kernel_headers

<span class="nb">cd</span> ..

wget 192.168.122.1:8000/linux-image-5.6.2_5.6.2-10.00.Custom_amd64.deb
wget 192.168.122.1:8000/linux-headers-5.6.2_5.6.2-10.00.Custom_amd64.deb

sudo dpkg -i linux-image-5.6.2_5.6.2-10.00.Custom_amd64.deb

sudo dpkg -i linux-headers-5.6.2_5.6.2-10.00.Custom_amd64.deb

sudo reboot now

uname -r

systemd-analyze 

</code></pre></div><p>compiler</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt install software-properties-common
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt update
sudo apt install gcc-9 g++-9
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 <span class="m">90</span> --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
</code></pre></div><p>分析
systemd-analyze blame</p>
<h1 id="todo">Todo</h1>
<ul>
<li>[] Compiler 優化</li>
<li></li>
</ul>
]]></content></item><item><title>跨平台 terminal 設定</title><link>https://blog.sappy.tw/posts/%E8%B7%A8%E5%B9%B3%E5%8F%B0terminal%E8%A8%AD%E5%AE%9A/</link><pubDate>Sat, 28 Mar 2020 23:49:20 +0000</pubDate><guid>https://blog.sappy.tw/posts/%E8%B7%A8%E5%B9%B3%E5%8F%B0terminal%E8%A8%AD%E5%AE%9A/</guid><description>緣由 最近在因為 terminal 跨平台讓我有點煩躁，所以才寫下這篇備忘 安裝 目前有兩款比較熱門的跨平台 terminal hyper terminus 就顏質跟設定方便度而言，我選擇了後者，也就是 terminus Windows 安</description><content type="html"><![CDATA[<h1 id="緣由">緣由</h1>
<p>最近在因為 terminal 跨平台讓我有點煩躁，所以才寫下這篇備忘</p>
<h1 id="安裝">安裝</h1>
<p>目前有兩款比較熱門的跨平台 terminal</p>
<ol>
<li><a href="https://hyper.is/">hyper</a></li>
<li><a href="https://eugeny.github.io/terminus/">terminus</a></li>
</ol>
<p>就顏質跟設定方便度而言，我選擇了後者，也就是 <a href="https://eugeny.github.io/terminus/">terminus</a></p>
<h2 id="windows-安裝">Windows 安裝</h2>
<ol>
<li>使用 <a href="https://chocolatey.org/">chocolatey</a> 安裝
<code>choco install terminus</code></li>
<li>安裝 <a href="https://github.com/PowerShell/PowerShell">powershell core</a>，
<code>choco install powershell-core</code></li>
<li>安裝 <a href="https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts">nerd fonts</a> 中任意喜歡的字體
我個人比較推 <code>FiraCode</code> <code>SourceCodePro</code> <code>CascadiaCode</code> 這三款</li>
<li>打開 terminus，在 terminus 的設定 -&gt; 外觀 -&gt; 字體上選擇字體</li>
</ol>
]]></content></item><item><title>ubuntu 上的中文輸入法設定 Chinese Input Method Setup on Ubuntu</title><link>https://blog.sappy.tw/posts/chinese-input-install-on-ubuntu/</link><pubDate>Tue, 11 Feb 2020 12:33:20 +0000</pubDate><guid>https://blog.sappy.tw/posts/chinese-input-install-on-ubuntu/</guid><description>緣由 最近在 Ubuntu 上做開發，便來安裝注音輸入法 安裝 此方法應該適用於 Ubuntu 12.10 以上版本（在 19.04 中測試過） 安裝 rime sudo apt-get install ibus-rime 安裝 注音 sudo apt-get install librime-data-terra-pinyin librime-data-bopomofo terminal 輸入 ibus-setup 會跳出 IBus Preferences 視</description><content type="html"><![CDATA[<h1 id="緣由">緣由</h1>
<p>最近在 Ubuntu 上做開發，便來安裝注音輸入法</p>
<h1 id="安裝">安裝</h1>
<p>此方法應該適用於 Ubuntu 12.10 以上版本（在 19.04 中測試過）</p>
<ol>
<li>安裝 rime <code>sudo apt-get install ibus-rime</code></li>
<li>安裝 注音 <code>sudo apt-get install librime-data-terra-pinyin librime-data-bopomofo</code></li>
<li>terminal 輸入 <code>ibus-setup</code> 會跳出 IBus Preferences 視窗</li>
<li>在 IBus Preferences -&gt; Input Method -&gt; Add -&gt; Chinese bopomofo</li>
<li>進入 settings -&gt; Region &amp; Language -&gt; Input Sources -&gt; + -&gt; Chinese (Bopomofo)</li>
<li>重新登入即可</li>
</ol>
<h1 id="參考資料">參考資料</h1>
<ul>
<li><a href="https://github.com/rime/home/wiki/RimeWithIBus">RimeWithIBus</a></li>
<li><a href="https://github.com/rime/plum">plum</a></li>
<li><a href="https://github.com/rime/rime-bopomofo">rime-bopomofo</a></li>
</ul>
]]></content></item><item><title>文獻管理軟體比較</title><link>https://blog.sappy.tw/posts/%E6%96%87%E7%8D%BB%E7%AE%A1%E7%90%86%E8%BB%9F%E9%AB%94%E6%AF%94%E8%BC%83/</link><pubDate>Sat, 04 Jan 2020 17:05:24 +0000</pubDate><guid>https://blog.sappy.tw/posts/%E6%96%87%E7%8D%BB%E7%AE%A1%E7%90%86%E8%BB%9F%E9%AB%94%E6%AF%94%E8%BC%83/</guid><description>文獻管理軟體比較 比較的時間以 2020/1/1 ~ 2020/1/5 的版本為主 前言 開始了研究生的生活後，陸陸續續使用了不同方法來管理文獻，但還是希望能穩定在一個軟體上，省去手</description><content type="html"><![CDATA[<h1 id="文獻管理軟體比較">文獻管理軟體比較</h1>
<p>比較的時間以 2020/1/1 ~ 2020/1/5 的版本為主</p>
<h1 id="前言">前言</h1>
<p>開始了研究生的生活後，陸陸續續使用了不同方法來管理文獻，但還是希望能穩定在一個軟體上，省去手動的步驟。<br>
經過了一段時間的比較後，終於誕生了這篇文章。</p>
<h1 id="需求簡介">需求簡介</h1>
<ol>
<li>標註必須附著在 pdf 上 - 由於我本身喜歡在 pdf 上做註記，也希望未來若要更換軟體時能方便地把我的資料帶走，而我的筆記就應當是我的筆記，不能被鎖死在特定格式上</li>
<li>取用文獻方便且正確（特別是在 arXiv 上的） - 由於我的領域很多時候會在 arXiv 上看到論文，因此要能夠正確的解析 arXiv 上的文獻，獲得正確的引用資訊外，也必須足夠方便把文獻放入管理軟體中，最好能一鍵解決</li>
<li>跨平台 - 由於我習慣用 ipad 來閱讀論文，用 pc or mac 寫作，因此至少要能跨這三個平台</li>
<li>便宜 - 因為我很窮ＱＡＱ</li>
<li>可用偏好的 pdf 閱讀器閱讀及編輯 - 因為學校有提供 adobe pdf，而有些軟體內建的不是很好用</li>
</ol>
<h1 id="開始比較">開始比較</h1>
<h2 id="參賽選手">參賽選手</h2>
<ol>
<li><a href="https://www.mendeley.com">Mendeley</a> - 之前使用的軟體</li>
<li><a href="https://www.zotero.org/">Zotero</a> - 本次冠軍</li>
<li><a href="https://endnote.com/">Endnote x9</a> - 老牌管理軟體</li>
<li><a href="https://www.citavi.com/en">Citavi 6</a> - 功能強大</li>
<li><a href="https://www.readcube.com/home">ReadCube</a> - 管理軟體新銳</li>
</ol>
<h2 id="第一輪淘汰">第一輪淘汰</h2>
<ol>
<li>Citavi 6 - 沒有跨平台</li>
<li>Endnote x9 - 對 arXiv 支援不好</li>
<li>ReadCube - 對 arXiv 支援不好 + 無法註記在 pdf 上</li>
</ol>
<h2 id="第二輪比較">第二輪比較</h2>
<h3 id="mendeley">Mendeley</h3>
<h4 id="優點">優點</h4>
<ol>
<li>龐大社群</li>
<li>優秀的論文推薦功能</li>
<li>對 arXiv 支援超好</li>
<li>跨平台</li>
</ol>
<h4 id="缺點">缺點</h4>
<ol>
<li>不能直接標記在 pdf 上</li>
<li>搜尋時，相同論文會出現多篇，引用、被引用次數不精確（跟 google scholar 相比）</li>
<li>貴(相比 Zotero)</li>
</ol>
<h3 id="zotero">Zotero</h3>
<h4 id="優點-1">優點</h4>
<ol>
<li>開源</li>
<li>支持 plugin</li>
<li>便宜（搭配 zotfile 服用）</li>
<li>可直接標註在 pdf 上</li>
<li>可自訂 pdf 檔名（zotfile）</li>
</ol>
<h4 id="缺點-1">缺點</h4>
<ol>
<li>對 arXiv 支援不佳（相比 Mendeley）</li>
<li>沒有論文推薦功能</li>
<li>不跨平台（iPad）</li>
</ol>
<h1 id="結論">結論</h1>
<p>最終還是選定 Zotero + Zotfile 搭配使用
下面來說明一下我自己的設定</p>
<h1 id="zotero-設定">Zotero 設定</h1>
<ol>
<li>安裝 <a href="http://zotfile.com/">Zotfile</a></li>
<li>取消自動快照
<img src="https://images.sappy.tw/zotero/zotero-1.png" alt="zotero-1">
<img src="https://images.sappy.tw/zotero/zotero-sync.png" alt="zotero-sync"></li>
<li>修改連結目錄成為相對目錄，這是最重要的步驟，在此目錄下的所有檔案都會變成相對目錄，因此在不同電腦上只要設定正確，就都能成功開啟檔案
<img src="https://images.sappy.tw/zotero/zotero-linked-file.png" alt="zotero-linked-file"></li>
<li>設定 Zotfile，告知要把檔案幫去哪裡，要跟上面的相對路徑一樣
<img src="https://images.sappy.tw/zotero/zotfile-config.png" alt="zotfile-config"></li>
<li>傳送到 ipad - 個人感覺不是很必要，因為這只是把檔案放到雲端硬碟上的資料夾而已，如果第五步驟已經把檔案放在雲端硬碟中，那這步驟就可以略過，不過假若將來檔案多起來，或許就能用這功能，減少在雲端硬碟中一個個慢慢找的時間
<img src="https://images.sappy.tw/zotero/zotfile-send-to-table.png" alt="zotfile-send-to-table"></li>
<li>命名規則，這步驟很重要，我是 年_標題_作者 <code>{%y_}{%t_}{%a}</code> 這樣命名，也要用 collection 作為子資料夾來分大類 <code>/%s</code>
<img src="https://images.sappy.tw/zotero/zotfile-rename.png" alt="zotfile-rename"></li>
</ol>
]]></content></item><item><title>Docker 開發環境簡易教學</title><link>https://blog.sappy.tw/posts/docker%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E7%B0%A1%E6%98%93%E6%95%99%E5%AD%B8/</link><pubDate>Sun, 29 Dec 2019 11:55:38 +0000</pubDate><guid>https://blog.sappy.tw/posts/docker%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E7%B0%A1%E6%98%93%E6%95%99%E5%AD%B8/</guid><description>簡介 最近在嘗試使用 docker 作為開發環境的選項，這篇只是單純紀錄可能遇到的問題跟常用用法 常駐 docker 並能連接上 terminal 用 {} 包起來代表變數 docker run -id {image} docker exec -it {id} bash 做 fuzz test</description><content type="html"><![CDATA[<h1 id="簡介">簡介</h1>
<p>最近在嘗試使用 docker 作為開發環境的選項，這篇只是單純紀錄可能遇到的問題跟常用用法</p>
<h2 id="常駐-docker-並能連接上-terminal">常駐 docker 並能連接上 terminal</h2>
<p>用 {} 包起來代表變數</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker run -id <span class="o">{</span>image<span class="o">}</span>

docker <span class="nb">exec</span> -it <span class="o">{</span>id<span class="o">}</span> bash
</code></pre></div><h2 id="做-fuzz-test">做 fuzz test</h2>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker run -id --ulimit <span class="nv">core</span><span class="o">=</span>-1 --privileged <span class="o">{</span>image<span class="o">}</span>
</code></pre></div><p><a href="https://ephrain.net/docker-%E5%9C%A8-container-%E8%A3%A1%E8%A8%AD%E5%AE%9A-core-dump-%E7%9A%84%E6%AA%94%E6%A1%88%E5%90%8D%E7%A8%B1%E6%A0%BC%E5%BC%8F/">參考</a></p>
<h2 id="打包現有環境到新-image">打包現有環境到新 image</h2>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">docker commit <span class="o">{</span>old_running_docker<span class="o">}</span> <span class="o">{</span>newimagename<span class="o">}</span>
</code></pre></div><p><a href="https://stackoverflow.com/questions/28302178/how-can-i-add-a-volume-to-an-existing-docker-container">參考</a></p>
]]></content></item><item><title>pyspark 小技巧</title><link>https://blog.sappy.tw/posts/pyspark%E5%B0%8F%E6%8A%80%E5%B7%A7/</link><pubDate>Sat, 28 Dec 2019 14:06:02 +0000</pubDate><guid>https://blog.sappy.tw/posts/pyspark%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid><description>簡介 最近在弄 spark 時遇到一堆破事，特此紀錄 collect 很久，甚至沒反應 conf = SparkConf().setMaster(&amp;#34;local[*]&amp;#34;) \ .setAppName(&amp;#34;App_Name&amp;#34;) \ .set(&amp;#39;spark.executor.memory&amp;#39;, &amp;#39;4G&amp;#39;) \ .set(&amp;#39;spark.driver.memory&amp;#39;, &amp;#39;45G&amp;#39;) \ .set(&amp;#39;spark.driver.maxResultSize&amp;#39;, &amp;#39;10G&amp;#39;) self.sc = SparkContext(conf=conf) saveAsFile 很久，甚至沒反應 conf = SparkConf().setMaster(&amp;#34;local[*]&amp;#34;) \ .setAppName(&amp;#34;App_Name&amp;#34;) \ .set(&amp;#39;spark.executor.memory&amp;#39;, &amp;#39;4G&amp;#39;) \ .set(&amp;#39;spark.driver.memory&amp;#39;, &amp;#39;45G&amp;#39;) \ .set(&amp;#39;spark.driver.maxResultSize&amp;#39;, &amp;#39;10G&amp;#39;) self.sc =</description><content type="html"><![CDATA[<h1 id="簡介">簡介</h1>
<p>最近在弄 spark 時遇到一堆破事，特此紀錄</p>
<h2 id="collect-很久甚至沒反應">collect 很久，甚至沒反應</h2>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">conf</span> <span class="o">=</span> <span class="n">SparkConf</span><span class="p">()</span><span class="o">.</span><span class="n">setMaster</span><span class="p">(</span><span class="s2">&#34;local[*]&#34;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">setAppName</span><span class="p">(</span><span class="s2">&#34;App_Name&#34;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="s1">&#39;spark.executor.memory&#39;</span><span class="p">,</span> <span class="s1">&#39;4G&#39;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="s1">&#39;spark.driver.memory&#39;</span><span class="p">,</span> <span class="s1">&#39;45G&#39;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="s1">&#39;spark.driver.maxResultSize&#39;</span><span class="p">,</span> <span class="s1">&#39;10G&#39;</span><span class="p">)</span>
<span class="bp">self</span><span class="o">.</span><span class="n">sc</span> <span class="o">=</span> <span class="n">SparkContext</span><span class="p">(</span><span class="n">conf</span><span class="o">=</span><span class="n">conf</span><span class="p">)</span>
</code></pre></div><h2 id="saveasfile-很久甚至沒反應">saveAsFile 很久，甚至沒反應</h2>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">conf</span> <span class="o">=</span> <span class="n">SparkConf</span><span class="p">()</span><span class="o">.</span><span class="n">setMaster</span><span class="p">(</span><span class="s2">&#34;local[*]&#34;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">setAppName</span><span class="p">(</span><span class="s2">&#34;App_Name&#34;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="s1">&#39;spark.executor.memory&#39;</span><span class="p">,</span> <span class="s1">&#39;4G&#39;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="s1">&#39;spark.driver.memory&#39;</span><span class="p">,</span> <span class="s1">&#39;45G&#39;</span><span class="p">)</span> \
    <span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="s1">&#39;spark.driver.maxResultSize&#39;</span><span class="p">,</span> <span class="s1">&#39;10G&#39;</span><span class="p">)</span>
<span class="bp">self</span><span class="o">.</span><span class="n">sc</span> <span class="o">=</span> <span class="n">SparkContext</span><span class="p">(</span><span class="n">conf</span><span class="o">=</span><span class="n">conf</span><span class="p">)</span>
</code></pre></div><h2 id="for-loop-越跑越慢">for loop 越跑越慢</h2>
<p>使用 repartition() 或 checkpoint() 可以解決這問題<br>
<a href="https://changhsinlee.com/pyspark-dataframe-basics/">https://changhsinlee.com/pyspark-dataframe-basics/</a></p>
]]></content></item><item><title>Linux 開機自啟動 Jupyter</title><link>https://blog.sappy.tw/posts/run-jupyter-on-boot/</link><pubDate>Wed, 07 Mar 2018 18:43:51 +0000</pubDate><guid>https://blog.sappy.tw/posts/run-jupyter-on-boot/</guid><description>環境 Ubuntu 16.04 桌面版 Anaconda 3.6 方法 用管理員權限使用 emacs1 打開 /etc/rc.local sudo emacs /etc/rc.local 加入下面兩行(請隨自己的設定改變) 說明 $user_name 是指自己的使用者名稱 su $user_name 是要以該使用者的身分執行</description><content type="html"><![CDATA[<h1 id="環境">環境</h1>
<ul>
<li>Ubuntu 16.04 桌面版</li>
<li>Anaconda 3.6</li>
</ul>
<h1 id="方法">方法</h1>
<ol>
<li>
<p>用管理員權限使用 emacs<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> 打開 /etc/rc.local</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">sudo emacs /etc/rc.local
</code></pre></div></li>
<li>
<p>加入下面兩行(請隨自己的設定改變)
說明</p>
<ul>
<li>$user_name 是指自己的使用者名稱</li>
<li>su $user_name 是要以該使用者的身分執行</li>
<li>/home/$user_name/anaconda3/envs/DL3/bin/jupyter 則是你執行 jupyter 的位置，這裡是以 ubuntu 下的 anaconda 為例</li>
<li>lab 跟 notebook 分別是執行 <a href="https://github.com/jupyterlab/jupyterlab">jupyter lab</a> 跟 <a href="http://jupyter.org/">jupyter notebook</a>，看個人需要使用</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">su <span class="nv">$user_name</span> -c <span class="s2">&#34;/home/</span><span class="nv">$user_name</span><span class="s2">/anaconda3/envs/DL3/bin/jupyter lab --no-browser;&#34;</span> <span class="p">&amp;</span>
su <span class="nv">$user_name</span> -c <span class="s2">&#34;/home/</span><span class="nv">$user_name</span><span class="s2">/anaconda3/envs/DL3/bin/jupyter notebook --port 8889 --no-browser;&#34;</span> <span class="p">&amp;</span>
</code></pre></div><p>所以我是</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">su sappy -c <span class="s2">&#34;/home/sappy/anaconda3/envs/DL3/bin/jupyter lab --no-browser;&#34;</span> <span class="p">&amp;</span>
su sappy -c <span class="s2">&#34;/home/sappy/anaconda3/envs/DL3/bin/jupyter notebook --port 8889 --no-browser;&#34;</span> <span class="p">&amp;</span>
</code></pre></div></li>
<li>
<p>可以使用下面的指令來協助除錯，詳細可以看<a href="http://linux.vbird.org/linux_basic/0510osloader.php#rc.local">這篇文章</a></p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">systemctl status rc-local.service
</code></pre></div></li>
</ol>
<h1 id="結論">結論</h1>
<p>rc.local 雖然已經過時了，但是&hellip;&hellip;能用就好 😁 😁</p>
<h1 id="參考">參考</h1>
<ul>
<li><a href="http://linux.vbird.org/linux_basic/0510osloader.php">鳥哥的 Linux 私房菜</a></li>
<li><a href="https://stackoverflow.com/questions/44231789/run-jupyter-notebook-on-boot-on-ubuntu">server - Run Jupyter-notebook on boot on Ubuntu - Stack Overflow</a></li>
</ul>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>一種編輯器 <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content></item><item><title>Pytorch 學習筆記</title><link>https://blog.sappy.tw/posts/pytorch-learning-get-start/</link><pubDate>Tue, 06 Mar 2018 22:44:40 +0000</pubDate><guid>https://blog.sappy.tw/posts/pytorch-learning-get-start/</guid><description>資源 官方教學 - 六十分鐘學會 Pytorch 六十分鐘學會 Pytorch - 中文翻譯 六十分鐘學會 Pytorch - 我的畫注 深度学习框架PyTorch：入门与实践 - 程式碼 這裡補充一些 Variable 的小</description><content type="html"><![CDATA[<h1 id="資源">資源</h1>
<ul>
<li>
<p><a href="http://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html">官方教學 - 六十分鐘學會 Pytorch</a></p>
</li>
<li>
<p><a href="https://zhuanlan.zhihu.com/p/25572330">六十分鐘學會 Pytorch - 中文翻譯</a></p>
</li>
<li>
<p><a href="https://goo.gl/YBKk2s">六十分鐘學會 Pytorch - 我的畫注</a></p>
</li>
<li>
<p><a href="https://github.com/chenyuntc/pytorch-book">深度学习框架PyTorch：入门与实践 - 程式碼</a></p>
</li>
</ul>
<p>這裡補充一些 Variable 的小東西</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="n">Variable</span><span class="p">(</span><span class="n">torch</span><span class="o">.</span><span class="n">Tensor</span><span class="p">([</span><span class="mi">3</span><span class="p">]),</span> <span class="n">requires_grad</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">Variable</span><span class="p">(</span><span class="n">torch</span><span class="o">.</span><span class="n">Tensor</span><span class="p">([</span><span class="mi">4</span><span class="p">]),</span> <span class="n">requires_grad</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>

<span class="n">d</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">b</span> <span class="c1"># a^2 + b</span>
</code></pre></div><p>可以透過 算出 梯度</p>
<pre><code class="language-pytohn" data-lang="pytohn">d.backward()
print(a.grad)
print(b.grad)
</code></pre><p>輸出是</p>
<pre><code class="language-output" data-lang="output">Variable containing:
 6
[torch.FloatTensor of size 1]

Variable containing:
 1
[torch.FloatTensor of size 1]
</code></pre><p>透過 grad_fn 可以看出計算圖(Computation Graph)長成甚麼樣子</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="k">print</span><span class="p">(</span><span class="n">d</span><span class="o">.</span><span class="n">grad_fn</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">d</span><span class="o">.</span><span class="n">grad_fn</span><span class="o">.</span><span class="n">next_functions</span><span class="p">)</span>
</code></pre></div><p>輸出</p>
<pre><code class="language-output" data-lang="output">&lt;AddBackward1 object at 0x7f73196e5eb8&gt;
((&lt;PowBackward0 object at 0x7f73196e5ba8&gt;, 0), (&lt;AccumulateGrad object at 0x7f73196e5b38&gt;, 0))
</code></pre>]]></content></item><item><title>安裝 markdown-it</title><link>https://blog.sappy.tw/posts/markdown-it-install/</link><pubDate>Sun, 04 Mar 2018 19:47:58 +0000</pubDate><guid>https://blog.sappy.tw/posts/markdown-it-install/</guid><description>起因 由於發現預設的 render 功能有點少，因此換了一下 renderer 安裝 主要參考 Hexo 研究筆記 1 hexo-next 使用hexo-renderer-markdown-it 但是發現 markdonw-it 的套</description><content type="html"><![CDATA[<h1 id="起因">起因</h1>
<p>由於發現預設的 render 功能有點少，因此換了一下 renderer</p>
<h1 id="安裝">安裝</h1>
<p>主要參考</p>
<ul>
<li><a href="https://dwatow.github.io/2017/06-18-about-hexo/re-equip-hexo1/#fn1">Hexo 研究筆記 1</a></li>
<li><a href="https://david6686.github.io/blog/Silentink/13325/">hexo-next 使用hexo-renderer-markdown-it</a></li>
</ul>
<p>但是發現 markdonw-it 的套件已經很久沒更新了
因此使用下面這行直接從 github 上安裝即可
<code>npm install git+https://github.com/hexojs/hexo-renderer-markdown-it.git —save</code></p>
]]></content></item><item><title>測試 markdown-it</title><link>https://blog.sappy.tw/posts/markdown-it-test/</link><pubDate>Sun, 04 Mar 2018 18:46:32 +0000</pubDate><guid>https://blog.sappy.tw/posts/markdown-it-test/</guid><description>markdown-it-footnote Footnote 1 link1. Footnote 2 link2. Inline footnote^[Text of inline footnote] definition. Duplicated footnote reference2. markdown-it-abbr This is HTML abbreviation example. It converts &amp;ldquo;HTML&amp;rdquo;, but keep intact partial entries like &amp;ldquo;xxxHTMLyyy&amp;rdquo; and so on. *[HTML]: Hyper Text Markup Language hexo-filter-github-emojis Hello✨Test 👽 Footnote can have markup and multiple paragraphs. &amp;#x21a9;&amp;#xfe0e; Footnote text. &amp;#x21a9;&amp;#xfe0e;</description><content type="html"><![CDATA[<h1 id="markdown-it-footnote">markdown-it-footnote</h1>
<p>Footnote 1 link<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<p>Footnote 2 link<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.</p>
<p>Inline footnote^[Text of inline footnote] definition.</p>
<p>Duplicated footnote reference<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.</p>
<h1 id="markdown-it-abbr">markdown-it-abbr</h1>
<p>This is HTML abbreviation example.
It converts &ldquo;HTML&rdquo;, but keep intact partial entries like &ldquo;xxxHTMLyyy&rdquo; and so on.
*[HTML]: Hyper Text Markup Language</p>
<h1 id="hexo-filter-github-emojis">hexo-filter-github-emojis</h1>
<p>Hello✨Test
👽</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>Footnote <strong>can have markup</strong></p>
<p>and multiple paragraphs. <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p>Footnote text. <a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content></item><item><title>protobuf install</title><link>https://blog.sappy.tw/posts/protobuf-install/</link><pubDate>Sat, 14 Oct 2017 09:37:58 +0000</pubDate><guid>https://blog.sappy.tw/posts/protobuf-install/</guid><description>前言 最近在弄 caffe 的安裝，過程中需要安裝到 opencv，但opencv又需要安裝到 protobuf 環境 ubuntu 17.04 過程 基本上按照官網做就好了，唯一需要注意的是，如果有</description><content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>最近在弄 caffe 的安裝，過程中需要安裝到 opencv，但opencv又需要安裝到 protobuf</p>
<h1 id="環境">環境</h1>
<ul>
<li>ubuntu 17.04</li>
</ul>
<h1 id="過程">過程</h1>
<p>基本上按照官網做就好了，唯一需要注意的是，如果有安裝 anconda ，可能會吃到anaconda內建的libtool，因此我的作法是更新anaconda的libtool，讓它版本相符合</p>
]]></content></item><item><title>update-alternatives 多版本控制</title><link>https://blog.sappy.tw/posts/update-alternatives/</link><pubDate>Mon, 09 Oct 2017 18:14:32 +0000</pubDate><guid>https://blog.sappy.tw/posts/update-alternatives/</guid><description>起因 因為要安裝 cuda ,但是我的 gcc/g++ 版本已經到了6.3了,因此得想辦法降回 4.x 解法 參考 注意: 優先度（install 最後的數字）是按照 大到小的 更詳細的參</description><content type="html"><![CDATA[<h1 id="起因">起因</h1>
<p>因為要安裝 cuda ,但是我的 gcc/g++ 版本已經到了6.3了,因此得想辦法降回 4.x</p>
<h1 id="解法">解法</h1>
<p><a href="https://askubuntu.com/a/26518/745445">參考</a>
注意: 優先度（install 最後的數字）是按照 大到小的</p>
<p><a href="http://blog.csdn.net/jasonding1354/article/details/50470109">更詳細的參數</a></p>
<p>可以用 &ndash;query 來找有沒有替代板</p>
]]></content></item><item><title>Tensorflow with Gpu 安裝教學</title><link>https://blog.sappy.tw/posts/tensorflow-gpu-install/</link><pubDate>Thu, 28 Sep 2017 22:34:55 +0000</pubDate><guid>https://blog.sappy.tw/posts/tensorflow-gpu-install/</guid><description>&lt;h1 id="起因">起因&lt;/h1>
&lt;p>因為教授要求要做物體辨識, 加上實驗室的Server目前暫時不能使用,所以只好先在自己的電腦上面跑&lt;/p>
&lt;h1 id="環境">環境&lt;/h1>
&lt;ul>
&lt;li>Ubuntu 17.04&lt;/li>
&lt;li>Tensorflow 1.3&lt;/li>
&lt;li>Cuda 9.0&lt;/li>
&lt;li>Cudnn 7.0&lt;/li>
&lt;/ul></description><content type="html"><![CDATA[<h1 id="起因">起因</h1>
<p>因為教授要求要做物體辨識, 加上實驗室的Server目前暫時不能使用,所以只好先在自己的電腦上面跑</p>
<h1 id="環境">環境</h1>
<ul>
<li>Ubuntu 17.04</li>
<li>Tensorflow 1.3</li>
<li>Cuda 9.0</li>
<li>Cudnn 7.0</li>
</ul>
<h1 id="過程">過程</h1>
<ol>
<li>
<p>安裝 nvidia 的驅動程式</p>
</li>
<li>
<p>安裝 cuda - 從官方網站上的 deb 包安裝即可</p>
</li>
<li>
<p>cudnn 要手動安裝,所以先下載 tar 檔案,</p>
<p>進到放著tar的資料夾</p>
<p>用 下面指令解壓縮</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">tar -xzvf cudnn-9.0-linux-x64-v7.tgz
</code></pre></div><p>複製到目錄</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ sudo cp cuda/include/cudnn.h /usr/local/cuda/include
$ sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
$ sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*
</code></pre></div><p>​</p>
</li>
<li>
<p>到 <code>/usr/local/cuda/lib64</code> 底下</p>
<p>使用下面指令, 創造一個軟連結 （因為 Tensorflow 使用 cudnn 6.0, 所以要用這方法把 讓它可以使用 libcudnn.so.6 這個檔案）</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">ln -s libcudnn.so.7.* libcudnn.so.6
</code></pre></div></li>
<li>
<p>用 pip 安裝 tensorflow with Gpu</p>
</li>
<li>
<p>在 <code>~/.bashrc</code> 最底下加上</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">export</span> <span class="nv">CUDA_HOME</span><span class="o">=</span>/usr/local/cuda/
<span class="nb">export</span> <span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$LD_LIBRARY_PATH</span><span class="s2">:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64&#34;</span>
</code></pre></div></li>
</ol>
<h2 id="選用">選用</h2>
<p>如要使用 pycharm 要記得幫它加上環境變數</p>]]></content></item><item><title>Ubuntu 調整硬碟大小教學</title><link>https://blog.sappy.tw/posts/ubuntu-resize-disk/</link><pubDate>Thu, 14 Sep 2017 21:13:33 +0000</pubDate><guid>https://blog.sappy.tw/posts/ubuntu-resize-disk/</guid><description>前言 最近在安裝 opencv 時，因為VM硬碟大小不夠，所以只好擴充硬碟大小，但是 root partition 好像沒辦法在開機時調整大小(不確定)，所以這次用 Gparted 過程 首先，先用 live cd</description><content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>最近在安裝 opencv 時，因為VM硬碟大小不夠，所以只好擴充硬碟大小，但是 root partition 好像沒辦法在開機時調整大小(不確定)，所以這次用 Gparted</p>
<h1 id="過程">過程</h1>
<p>首先，先用 live cd 做開機
<a href="http://xx3d2ybnf.pixnet.net/blog/post/128713507-vmware%25E8%2599%259B%25E6%2593%25AC%25E6%25A9%259F%25E5%2599%25A8%25E9%2580%25B2%25E5%2585%25A5bios%25E6%2588%2596%25E6%2598%25AF%25E9%2596%258B%25E6%25A9%259F%25E9%2581%25B8%25E5%2596%25AEboot-menu%25E7%259A%2584">參考這篇</a></p>
<p>然後打開 Gparted
會看到被紅色圈起來的部分，然後對她右鍵，按下 swapoff
<img src="images/snipaste_20170914_211549.png" alt="snipaste_20170914_211549">
然後把他移動到右邊(先擴充到右邊，移過去，再縮小)，並且在對他右鍵做swapon 就完成了(灑花花</p>
]]></content></item><item><title>OpenCV 安裝教學</title><link>https://blog.sappy.tw/posts/opencv-install/</link><pubDate>Thu, 14 Sep 2017 16:07:33 +0000</pubDate><guid>https://blog.sappy.tw/posts/opencv-install/</guid><description>前言 因為教授要求安裝 opencv，但是因為 opencv 安裝複雜，所以在此紀錄一下 環境要求 opencv3.3 ubuntu 17.04 安裝紀錄 首先，我是參考 How to install OpenCV 3.1 on Ubuntu 14.04 64bits 以及官方文件 一開</description><content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>因為教授要求安裝 opencv，但是因為 opencv 安裝複雜，所以在此紀錄一下</p>
<h1 id="環境要求">環境要求</h1>
<ul>
<li>opencv3.3</li>
<li>ubuntu 17.04</li>
</ul>
<h1 id="安裝紀錄">安裝紀錄</h1>
<p>首先，我是參考 <a href="https://gist.github.com/MarcWang/0547f87cf777b6576275">How to install OpenCV 3.1 on Ubuntu 14.04 64bits</a>
以及<a href="http://docs.opencv.org/trunk/d7/d9f/tutorial_linux_install.html">官方文件</a></p>
<p>一開始我是先 按照 <a href="https://gist.github.com/MarcWang/0547f87cf777b6576275">How to install OpenCV 3.1 on Ubuntu 14.04 64bits</a> 安裝</p>
<p>在下面這行遇到一些困難</p>
<pre><code>sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev
</code></pre><p>首先，libjasper-dev 已經被從 ubuntu 17 上移除了，所以我是透過 <a href="https://stackoverflow.com/a/44488374/4754280">這個方法</a> 來安裝 ubuntu 16 版的 libjasper-dev
其次
libpng12-dev 已經被 libpng12-0 所取代了，所以把上面的這部分換掉即可</p>
<p>這裡說明一下比較會用到的編譯的參數( <a href="http://docs.opencv.org/trunk/d7/d9f/tutorial_linux_install.html">官方文件</a> 上都找的到)</p>
<pre><code>cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..
</code></pre><ul>
<li>CMAKE_BUILD_TYPE 可以設為 Release or Debug</li>
<li>最後的 .. 是指 opencv 原始碼的路徑</li>
<li>OPENCV_EXTRA_MODULES_PATH 要放 opencv_contrib/modules 的路徑</li>
</ul>
<p>之後參考<a href="http://cccharles.pixnet.net/blog/post/338054801-%25E5%259C%25A8ubuntu-16.04%25E5%25AE%2589%25E8%25A3%259Dopencv-3.1">這篇</a> 安裝 Anaconda 的 opencv 以及一些加速器</p>
<p>最後做完一些測試就OK了 ^^</p>
]]></content></item><item><title>[Onenote]把pdf列印在同一頁</title><link>https://blog.sappy.tw/posts/onenote-print-pdf-in-one-page/</link><pubDate>Tue, 22 Aug 2017 10:39:58 +0000</pubDate><guid>https://blog.sappy.tw/posts/onenote-print-pdf-in-one-page/</guid><description>前因 因為想讓Onenote的Pdf可以放在同一頁而不被切割成好幾頁，所以上網稍微找了一下方法 解法 到 檔案 -&amp;gt; 選項 -&amp;gt; 進階 (英文的話會是File -&amp;gt; Options</description><content type="html"><![CDATA[<h1 id="前因">前因</h1>
<p>因為想讓Onenote的Pdf可以放在同一頁而不被切割成好幾頁，所以上網稍微找了一下方法</p>
<h1 id="解法">解法</h1>
<p>到 檔案 -&gt; 選項 -&gt; 進階 (英文的話會是File -&gt; Options -&gt; Advanced)
找到 在多頁上插入長的列印成品 (Insert long printouts on multiple pages) 並把他取消打勾，這樣就可以了 ^^</p>
<h1 id="參考">參考</h1>
<p><a href="https://social.technet.microsoft.com/Forums/office/en-US/f5ac4d90-b92a-446f-b766-0e5ff3445187/how-to-print-multiple-page-pdfs-onto-a-single-onenote-page?forum=officeitpro">How to print multiple page PDFs onto a single Onenote Page?</a></p>
]]></content></item><item><title>cmder 設定</title><link>https://blog.sappy.tw/posts/cmder-setting/</link><pubDate>Sun, 20 Aug 2017 14:33:20 +0000</pubDate><guid>https://blog.sappy.tw/posts/cmder-setting/</guid><description>緣由 因為最近開始在找 windows 10 系統上好用的另列命令列工具, 在友人的推薦下使用了這個 安裝 由於他的安裝只是把它解壓縮而已, 在此就不多說了 設定 ls 中文資料</description><content type="html"><![CDATA[<h1 id="緣由">緣由</h1>
<p>因為最近開始在找 windows 10 系統上好用的另列命令列工具, 在友人的推薦下使用了這個</p>
<h1 id="安裝">安裝</h1>
<p>由於他的安裝只是把它解壓縮而已, 在此就不多說了</p>
<h1 id="設定">設定</h1>
<h2 id="ls-中文資料夾亂碼">ls 中文資料夾亂碼</h2>
<ol>
<li>打開Settings (快速鍵 win+ctrl+p)</li>
<li>在Settings &gt; Startup &gt; Environment裡加入：set LANG=zh_TW.UTF8</li>
<li>重開</li>
</ol>
<h2 id="更改初始資料夾">更改初始資料夾</h2>
<ol>
<li>切到 setting -&gt; Startup -&gt; Tasks -&gt; {cmd}</li>
<li>最後面加入(D:\Data 可以換成你想要的路徑)</li>
</ol>
<pre><code>-new_console:d:&quot;D:\Data&quot;
</code></pre><h1 id="參考資料">參考資料</h1>
<p><a href="http://zwindr.blogspot.tw/2016/01/cmder-setting-1.html">子風的知識庫</a></p>
]]></content></item><item><title>dpkg: error processing archive *</title><link>https://blog.sappy.tw/posts/dpkg-fail/</link><pubDate>Sat, 19 Aug 2017 12:39:58 +0000</pubDate><guid>https://blog.sappy.tw/posts/dpkg-fail/</guid><description>前提 在更新時遇到 dpkg: error processing archive /var/cache/apt/archives/python-lldb-6.0_1%3a6.0~svn310966-1~exp1_amd64.deb (--unpack): trying to overwrite '/usr/lib/python2.7/dist-packages/lldb', which is also in package python-lldb-4.0 1:4.0-1ubuntu1 看到網路上的解法 sudo dpkg --force-all -i /var/cache/apt/archives/linux-libc-dev_3.13.0-88.135_armhf.deb 於是稍微修改一下，變成 sudo dpkg --force-all -i /var/cache/apt/archives/python-lldb-6.0_1%3a6.0~svn310966-1~exp1_amd64.deb 就大功告成了</description><content type="html"><![CDATA[<h1 id="前提">前提</h1>
<p>在更新時遇到</p>
<pre><code>dpkg: error processing archive /var/cache/apt/archives/python-lldb-6.0_1%3a6.0~svn310966-1~exp1_amd64.deb (--unpack): trying to overwrite '/usr/lib/python2.7/dist-packages/lldb', which is also in package python-lldb-4.0 1:4.0-1ubuntu1
</code></pre><p>看到網路上的<a href="https://github.com/dnschneid/crouton/issues/2631">解法</a></p>
<pre><code>sudo dpkg --force-all -i /var/cache/apt/archives/linux-libc-dev_3.13.0-88.135_armhf.deb
</code></pre><p>於是稍微修改一下，變成</p>
<pre><code>sudo dpkg --force-all -i /var/cache/apt/archives/python-lldb-6.0_1%3a6.0~svn310966-1~exp1_amd64.deb
</code></pre><p>就大功告成了</p>
]]></content></item><item><title>如何在github上建立gitlab的鏡像</title><link>https://blog.sappy.tw/posts/gitlab-mirror-to-github/</link><pubDate>Tue, 15 Aug 2017 14:47:27 +0000</pubDate><guid>https://blog.sappy.tw/posts/gitlab-mirror-to-github/</guid><description>起因 因為 gitlab 上相對於 github 的可玩性跟福利都比較大所以打算逐漸遷移過去, 然而由於 github 上使用的人數依然比較多, 便想說能不能在 github 上面建立一個 gitlab 的複製版 設定</description><content type="html"><![CDATA[<h1 id="起因">起因</h1>
<p>因為 gitlab 上相對於 github 的可玩性跟福利都比較大所以打算逐漸遷移過去, 然而由於 github 上使用的人數依然比較多, 便想說能不能在 github 上面建立一個 gitlab 的複製版</p>
<!-- raw HTML omitted -->
<h1 id="設定">設定</h1>
<ol>
<li>先在 github 上新開一個對應的 repo</li>
<li><a href="https://github.com/settings/tokens/new?scopes=repo&amp;description=GitLab+mirror">產生 token</a></li>
<li>先進入這裡 <img src="http://i.imgur.com/ukP9eme.png" alt="gitlab ui"></li>
<li>打勾, 並且按照格式輸入 <img src="http://i.imgur.com/zUVMT7l.png" alt="gitlab ui"></li>
<li>按下存檔並且更新(可能要等一段時間), 如果你發現github上的repo有新檔案了(更新完後等 3~5分鐘),那就代表你成功了(灑花花)</li>
</ol>
<h1 id="參考資料">參考資料</h1>
<p><a href="https://espadav8.co.uk/2016/08/22/gitlab-mirror-pushing-to-github/">espadav8 blog</a></p>
]]></content></item><item><title>R RStudio 安裝教學</title><link>https://blog.sappy.tw/posts/rstudio-install/</link><pubDate>Wed, 28 Jun 2017 00:22:33 +0000</pubDate><guid>https://blog.sappy.tw/posts/rstudio-install/</guid><description>起因 因為之前在 Ubuntu 上安裝 RStudio 時遇到一點問題，便把過程記錄下來，並讓其他人參考 安裝過程 (2017 / 06 /27 安裝) 環境需求 硬體需求 至少 1GB RAM 軟體需求 Ubuntu 17.04 要有roo</description><content type="html"><![CDATA[<h1 id="起因">起因</h1>
<p>因為之前在 Ubuntu 上安裝 RStudio 時遇到一點問題，便把過程記錄下來，並讓其他人參考</p>
<h1 id="安裝過程">安裝過程</h1>
<blockquote>
<p>(2017 / 06 /27  安裝)</p>
</blockquote>
<h1 id="環境需求">環境需求</h1>
<ul>
<li>
<p>硬體需求</p>
<ul>
<li>至少 1GB RAM</li>
</ul>
</li>
<li>
<p>軟體需求</p>
<ul>
<li>Ubuntu 17.04</li>
<li>要有root or sudo 的權限</li>
</ul>
</li>
</ul>
<!-- raw HTML omitted -->
<h1 id="第一步---安裝-r">第一步 - 安裝 R</h1>
<p>因為 Ubuntu 預設的 R 通常版本都很舊，所以要用到外部別人包好的 R 套件
這裡使用 CRAN 維護的版本</p>
<p><!-- raw HTML omitted --><strong>注意!! 請選擇可信賴的外部團體維護的版本</strong><!-- raw HTML omitted --></p>
<p>輸入下列指令</p>
<pre><code>sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
</code></pre><p>你將會看到如下的輸出
<img src="https://i.imgur.com/MxCrJIr.png" alt=""></p>
<p>再來把套件來源加入到套件管理系統的列表中
<!-- raw HTML omitted --><strong>請把最後的zesty換成你ubuntu的版本</strong><!-- raw HTML omitted -->
請參考<a href="https://wiki.ubuntu.com/Releases">版本名稱對照表</a></p>
<pre><code>sudo add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu zesty/'
</code></pre><p>更新你的列表資訊</p>
<pre><code>sudo apt-get update
</code></pre><p>如果成功你可能會看到如下輸出(get 後的數字不一定會一樣)
<img src="https://i.imgur.com/C6jkVzl.png" alt=""></p>
<p>最後就可以安裝R 了</p>
<pre><code>sudo apt-get install r-base
</code></pre><p>如果一切順利，沒有跑出錯誤的訊息那應該就代表你成功了(灑花花</p>
<h1 id="第二步---安裝-rstudio">第二步 - 安裝 Rstudio</h1>
<p>他有分成兩個版本</p>
<ul>
<li>Server 版</li>
<li>Desktop 版
我只有安裝 Desktop版，所以Server板我不清楚怎麼安裝
所以要安裝Server版的請看</li>
</ul>
<p><a href="https://www.rstudio.com/products/rstudio/download-server/">Server 版安裝方式</a></p>
<p>Desktop 版安裝方式</p>
<ol>
<li>
<p>先去 Rstudio 的官網把 Rstudio 的安裝套件抓下來
a. <a href="https://www.rstudio.com/products/rstudio/download/">快速連結</a></p>
</li>
<li>
<p>找到你要的版本並下載
a. <img src="https://i.imgur.com/fDVGiIx.png" alt=""></p>
<p>b. 看你是 32 bit or 64 bit
c. Command Line (小黑窗) 底下可以用底下的命令</p>
<pre><code>wget 下載網址 
</code></pre></li>
<li>
<p>因為 RStudio 的新版本加入了兩個相依套件，所以要先安裝
a. 到 <a href="https://packages.debian.org/jessie/amd64/libgstreamer-plugins-base0.10-0/download">https://packages.debian.org/jessie/amd64/libgstreamer-plugins-base0.10-0/download</a> ， 下載 libgstreamer-plugins-base0.10-0_0.10.36-2_amd64.deb</p>
<p>b. 到  <a href="https://packages.debian.org/jessie/amd64/libgstreamer0.10-0/download">https://packages.debian.org/jessie/amd64/libgstreamer0.10-0/download</a> 下載 libgstreamer0.10-0_0.10.36-1.5_amd64.deb</p>
<p>c.使用 sudo dpkg -i  剛剛下載的兩個套件名稱 安裝套件，大概長這樣 並補充一下，用tab鍵可以自動補全名稱，但是要在同一個目錄底下</p>
<pre><code>sudo dpkg -i  libgstreamer-plugins-base0.10-0_0.10.36-2_amd64.deb libgstreamer0.10-0_0.10.36-1.5
</code></pre><p>d. 安裝另外兩個相依套件</p>
<pre><code>sudo apt install libjpeg62 libedit2
</code></pre><p>e. 最後 安裝 Rstudio</p>
<pre><code>sudo dpkg -i rstudio-1.0.143-amd64.deb
</code></pre><p><img src="https://i.imgur.com/TTSfnFF.png" alt=""></p>
</li>
</ol>
<p>到這裡就大功告成啦XDD</p>
]]></content></item><item><title>ycmd-install</title><link>https://blog.sappy.tw/posts/ycmd-install/</link><pubDate>Sat, 27 May 2017 21:47:33 +0000</pubDate><guid>https://blog.sappy.tw/posts/ycmd-install/</guid><description>什麼是ycmd ycmd原本是在vim上的You-Complete-Me, 而後作者把補全部分單獨分離出來做為一個後端,使其他編輯器也能享受這種</description><content type="html"><![CDATA[<h1 id="什麼是ycmd">什麼是ycmd</h1>
<p>ycmd原本是在vim上的You-Complete-Me, 而後作者把補全部分單獨分離出來做為一個後端,使其他編輯器也能享受這種神級的補全系統.
我目前主要是用它來補全c++,但是他還能夠補全像是go,JS之類的語言,可說是十分全能</p>
<!-- raw HTML omitted -->
<h1 id="安裝">安裝</h1>
<h2 id="安裝環境">安裝環境</h2>
<p>我的環境是spacemacs + ubuntu 17.04 , 由於spacemacs已經有人幫忙把常用的包都設定好了,所以設定起來可說是相當簡單</p>
<h2 id="安裝-1">安裝</h2>
<ol>
<li>首先,先安裝clang,因為這是ycmd的必要套件,這部分我們參考官網的<a href="https://github.com/Valloric/ycmd#building">安裝說明</a></li>
<li>在dotfile(快捷鍵Space f e d)中, 按照<a href="https://github.com/syl20bnr/spacemacs/tree/master/layers/%2Btools/ycmd#ycmd">spacemacs ycmd layer install</a>安裝</li>
<li>測試收工</li>
</ol>
<h2 id="常見問題">常見問題</h2>
<ul>
<li>如果出現這樣的錯誤訊息</li>
</ul>
<pre><code>layout: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by layout)
</code></pre><p>那麼請先<a href="https://askubuntu.com/a/582910">更新你的函式庫</a>
如果你的 python 環境是 anaconda, 那麼<a href="https://askubuntu.com/a/786944">這樣更新</a></p>
<ul>
<li>路徑不正確  - 他的路徑是吃絕對路徑,所以要像是這樣子</li>
</ul>
<pre><code>  ;;; ycmd 的路徑
  (set-variable 'ycmd-server-command '(&quot;python&quot; &quot;/home/sappy5678/emacs_setting/require_plugin/ycmd/ycmd/&quot;))
  ;;; 把要用的資料夾加入白名單
  (setq ycmd-extra-conf-whitelist '(&quot;~/hw/*&quot;))
  ;;; 使用ycmd裡面預設的配置
  (set-variable 'ycmd-global-config &quot;/.emacs.d/layers/+tools/ycmd/global_conf.py&quot;)
  ;;; 預設開始起自動補全
  (setq ycmd-force-semantic-completion t)
  (add-hook 'doc-view-mode-hook 'auto-revert-mode 'c++-mode-hook 'ycmd-mode)
</code></pre><ul>
<li>要記得安裝auto-complete 讓自動補權的前端顯示出來</li>
</ul>
]]></content></item><item><title>RancherOS安裝教學</title><link>https://blog.sappy.tw/posts/rancheros%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/</link><pubDate>Mon, 01 May 2017 00:14:25 +0000</pubDate><guid>https://blog.sappy.tw/posts/rancheros%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/</guid><description/><content type="html"></content></item><item><title>gdb簡易教學</title><link>https://blog.sappy.tw/posts/gdb%E7%B0%A1%E6%98%93%E6%95%99%E5%AD%B8/</link><pubDate>Sat, 08 Apr 2017 17:12:01 +0000</pubDate><guid>https://blog.sappy.tw/posts/gdb%E7%B0%A1%E6%98%93%E6%95%99%E5%AD%B8/</guid><description>簡介 gdb 是一種除錯的工具,經常在 Linux 環境中被使用 參考資料 Linux 除錯利器 - GDB 簡介 Debugging with GDB （入門篇） 小技巧 印出ascii或客製化輸出 輸出格式 使用方法 EX: p /c</description><content type="html"><![CDATA[<h1 id="簡介">簡介</h1>
<p>gdb 是一種除錯的工具,經常在 Linux 環境中被使用</p>
<!-- raw HTML omitted -->
<h1 id="參考資料">參考資料</h1>
<ul>
<li><a href="http://tetralet.luna.com.tw/?op=ViewArticle&amp;articleId=187&amp;blogId=1">Linux 除錯利器 - GDB 簡介</a></li>
<li><a href="http://www.study-area.org/goldencat/debug.htm">Debugging with GDB （入門篇）</a></li>
</ul>
<h2 id="小技巧">小技巧</h2>
<h3 id="印出ascii或客製化輸出">印出ascii或客製化輸出</h3>
<ul>
<li><a href="https://sourceware.org/gdb/onlinedocs/gdb/Output-Formats.html">輸出格式</a></li>
<li>使用方法
<ul>
<li>EX: p /c char_string</li>
</ul>
</li>
</ul>
<h3 id="中斷點條件">中斷點條件</h3>
<p><a href="http://stackoverflow.com/questions/4183871/how-do-i-set-a-conditional-breakpoint-in-gdb-when-char-x-points-to-a-string-wh">by StackOverFlow</a></p>
<pre><code>break x:20 if strcmp(y, &quot;hello&quot;) == 0
</code></pre><p>20 是指行數, x 是可以是任何檔案名稱, 而 y 可以是任何變數</p>
]]></content></item><item><title>Python 簡略教學</title><link>https://blog.sappy.tw/posts/python-%E7%B0%A1%E7%95%A5%E6%95%99%E5%AD%B8/</link><pubDate>Sun, 05 Mar 2017 10:39:58 +0000</pubDate><guid>https://blog.sappy.tw/posts/python-%E7%B0%A1%E7%95%A5%E6%95%99%E5%AD%B8/</guid><description>安裝 請先到 Anaconda 安裝Anaconda (建議 Python 3.x 版本) 再來到 Pycharm 安裝 IDE (Community 版本是免費的) 安裝完成後, 打開 Pycharm 新增一個 .py 檔, 並輸入 print(&amp;ldquo;Hello World&amp;rdquo;), 之後執行看看, 看看有</description><content type="html"><![CDATA[<h1 id="安裝">安裝</h1>
<ol>
<li>請先到 <a href="https://www.continuum.io/downloads">Anaconda</a> 安裝Anaconda (建議 Python 3.x 版本)</li>
<li>再來到 <a href="https://www.jetbrains.com/pycharm/download/#section=windows">Pycharm</a> 安裝 IDE (Community 版本是免費的)</li>
<li>安裝完成後, 打開 Pycharm 新增一個 .py 檔, 並輸入 print(&ldquo;Hello World&rdquo;), 之後執行看看, 看看有沒有印出 Hello World</li>
</ol>
<!-- raw HTML omitted -->
<h1 id="基本語法">基本語法</h1>
<h2 id="使用方式">使用方式</h2>
<ul>
<li>我會盡量為每個部份都寫一些教學以及練習題, 讓大家可以更快速的上手</li>
<li><a href="https://repl.it/classroom/invite/DacYfXQ">練習題</a> 如果想要練習的人可以進來<a href="https://repl.it/classroom/invite/DacYfXQ">這邊</a>, 裡面有一些基礎題讓大家練習</li>
</ul>
<h2 id="基本輸入輸出">基本輸入輸出</h2>
<h3 id="輸出">輸出</h3>
<p>Python 是個很口語化的程式語言
如同你剛才所看到的</p>
<pre><code class="language-python=" data-lang="python=">print(&quot;Hello World&quot;)
</code></pre><p>便代表著印出 Hello World 這幾個單字, 當然, 中文也是OK的, 只要你將他包裹在 &quot;&rdquo; 兩個引號之中
便可以將他印出來, 現在換你來試試看</p>
<!-- raw HTML omitted -->
<h3 id="輸入">輸入</h3>
<p>至於要如何輸入呢?
Python 也提供了很口語化的方法 &quot; input() &quot;
像是這樣</p>
<!-- raw HTML omitted -->
<h2 id="資料型態">資料型態</h2>
<p>但首先, 我們要認識一下變數
變數, 便是我們之前說過的, 給某些東西一個名子
也可以想成是數學中的 x = 1 這種代數
而資料型態則是告訴 Python 你那個東西是什麼, 例如 數字或是字串
Python 常見以下幾種資料型態</p>
<ul>
<li>int (整數): 例如 0 1 2 &hellip;. , 也可以是負數, 像是 -598 -753 -1 之類的</li>
<li>float (浮點數): 也是我們所謂的小數點, 例如 3.1415926 123.999 -3.784 等等,要注意的是, 小數點會有誤差, 所以使用時要特別小心</li>
<li>string (字串): 例如我們一開始的 &ldquo;Hello World&rdquo; 或者是 &ldquo;Input&rdquo; 等等, 這裡要注意的是,字串都要用 &quot;&rdquo; 兩個引號包起來, 而且你所有的 input() 的值, 都會被當成字串看待</li>
<li>bool (布林): 他只有兩個值, True 和 False, 常用來作為條件判斷用</li>
<li>list (列表): 用來同時存放很多資料的型態, 類似於數學上的矩陣,之後會有更詳細的介紹</li>
<li>tuple (元組): 跟 list 類似, 最大的不同在於這個是不能改變的, 之後會有更詳細的介紹</li>
<li>dict (字典): 存放很多資料的型態,常用於做出類似層級的概念, 之後會有更詳細的介紹</li>
</ul>
<h3 id="int-整數-float-浮點數">int (整數), float (浮點數)</h3>
<p>廢話不多說, 直接進入正題</p>
<!-- raw HTML omitted -->
<h3 id="list-列表-tuple-元組">list (列表), tuple (元組)</h3>
<!-- raw HTML omitted -->
<h3 id="dict-字典">dict (字典)</h3>
<!-- raw HTML omitted -->
<h2 id="流程控制">流程控制</h2>
<p>我們已經學會了那麼多的型態, 然而, 當情況變得更複雜時, 我們可能會遇到一些需要判斷的問題.  例如, 當我們要判斷考試的成績是否及格時, 要怎麼做呢?
所以我們接下來就要學到如何判斷.
希望大家還記得我們之前說道的 bool 嗎? 他只有 True 跟 False 兩種型態, 接下來我們就會使用他來做判斷
一些基本的條件判斷:
* &gt;= 大於等於
* &gt;  大於
* == 等於
* &lt;= 小於等於
* &lt;  小於
* != 不等於</p>
<h3 id="if-elif-else">if elif else</h3>
<ul>
<li>if - 如果, 你可以把他想像成如果條件為真的話, 要做些甚麼</li>
<li>elif - 當第一個條件不符合時, 就會來檢查這裡的條件, elif 是 else if 的縮寫</li>
<li>else - 其他, 就是當上面所有條件都不符合時, 就會來執行這裡面的動作
接下來是例行的範例時間XDD</li>
</ul>
<!-- raw HTML omitted -->
<h3 id="for-while">for while</h3>
<p>如果我們現在要印出 1 ~ 100 要怎麼辦呢?
如果只能夠 一個個慢慢印出來那不是要印 100 次嗎?
所以便出現了迴圈, 能夠讓我們執行一些步驟很多次
所以這樣就不需要打 100 次了
直接上範例 XDD</p>
<!-- raw HTML omitted -->
<h2 id="function">function</h2>
<h1 id="library">library</h1>
<h2 id="安裝-1">安裝</h2>
<h2 id="使用">使用</h2>
]]></content></item><item><title>Hello World</title><link>https://blog.sappy.tw/posts/hello-world/</link><pubDate>Tue, 28 Jun 2016 00:22:33 +0000</pubDate><guid>https://blog.sappy.tw/posts/hello-world/</guid><description>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick Start Create a new post $ hexo new &amp;#34;My New Post&amp;#34; More info: Writing
Run server $ hexo server More info: Server
Generate static files $ hexo generate More info: Generating
Deploy to remote sites $ hexo deploy More info: Deployment</description><content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hexo new <span class="s2">&#34;My New Post&#34;</span>
</code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server">Run server</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hexo server
</code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hexo generate
</code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ hexo deploy
</code></pre></div><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content></item><item><title>LSTM 心得</title><link>https://blog.sappy.tw/posts/lstm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.sappy.tw/posts/lstm/</guid><description>RNN RNN 其本質上就是一個具狀態的 NN，他跟其他 NN 不同的地方就在於他多了一個輸入，表示上一個狀態(Hidden State) 如下圖所示 1 RNN 示意圖 RNN 缺點 而隨之帶</description><content type="html"><![CDATA[<h1 id="rnn">RNN</h1>
<p>RNN 其本質上就是一個具狀態的 NN，他跟其他 NN 不同的地方就在於他多了一個輸入，表示上一個狀態(Hidden State)<br>
如下圖所示</p>
<p><img src="https://miro.medium.com/max/250/1*T_ECcHZWpjn0Ki4_4BEzow.gif" alt="RNN 示意圖"><br>
<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> RNN 示意圖</p>
<h2 id="rnn-缺點">RNN 缺點</h2>
<p>而隨之帶來的問題即是梯度消失 or 爆炸的問題<br>
因 RNN 在計算時，是以乘法為主，而乘法有一個特性，那就是很容易使數值太大或太小，
例如 (1.01) 的 365 次方 會是 37.7834343329，
而   (0.99) 的 365 次方 則是 0.02551796445，
因此如果網路很深，句子很長，遇到太長句子時，在 Backward Propagation (反向傳播) 很容易使數字太大或太小，造成梯度爆炸或消失的問題，使越前面的句子，其參數很難被 RNN 更新的很好。
也因此，越是前面的句子，越難被 RNN 所利用 (因為其參數更新不好)，也因此造成 RNN 僅能很好的利用靠近句子結尾的幾個字而已。<br>
<img src="https://miro.medium.com/max/960/1*Ku54qmCryZVBaIc6g8rjGA.gif" alt="RNN 反向傳播 示意圖"><br>
<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> RNN 反向傳播 示意圖</p>
<h1 id="lstm">LSTM</h1>
<p><img src="https://www.researchgate.net/profile/Savvas_Varsamopoulos/publication/329362532/figure/fig5/AS:699592479870977@1543807253596/Structure-of-the-LSTM-cell-and-equations-that-describe-the-gates-of-an-LSTM-cell_W640.jpg" alt=""><br>
LSTM 架構圖 <a href="https://www.researchgate.net/publication/329362532_Designing_neural_network_based_decoders_for_surface_codes/figures?lo=1">出處</a></p>
<p>那要怎麼解決呢? LSTM 提出的做法是透過多一個狀態來保存長距離訊息</p>
<h2 id="lstm-結構">LSTM 結構</h2>
<p>$\sigma$ 控制著資訊流過去的百分比 (0 ~ 1)<br>
$tanh$ 則是代表資訊的數值 (-1 ~ 1)</p>
<h3 id="forget-gate-最左邊的-sigma">Forget gate (最左邊的 $\sigma$)</h3>
<p>從圖中可以很明顯的看出，<br>
決定長距離訊息 C 有多少要用到</p>
<h3 id="input-gate-中間的黃色-sigma--tanh">Input gate (中間的黃色 $\sigma\ &amp;\ tanh$)</h3>
<p>決定多少短距離訊息要被更新到 C 裡面</p>
<h3 id="output-gate最右邊的區域">Output gate(最右邊的區域)</h3>
<p>決定什麼要進入隱藏狀態中</p>
<h1 id="gru">GRU</h1>
<p><img src="https://miro.medium.com/max/1400/1*jhi5uOm9PvZfmxvfaCektw.png" alt=""><br>
<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> GRU 架構圖</p>
<h1 id="參考">參考</h1>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><a href="https://towardsdatascience.com/illustrated-guide-to-recurrent-neural-networks-79e5eb8049c9">Illustrated Guide to Recurrent Neural Networks</a> <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p><a href="https://towardsdatascience.com/illustrated-guide-to-lstms-and-gru-s-a-step-by-step-explanation-44e9eb85bf21">Illustrated Guide to LSTM’s and GRU’s: A step by step explanation</a> <a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content></item><item><title>社群網路筆記 2</title><link>https://blog.sappy.tw/posts/%E7%A4%BE%E7%BE%A4%E7%B6%B2%E8%B7%AF%E7%AD%86%E8%A8%98_2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.sappy.tw/posts/%E7%A4%BE%E7%BE%A4%E7%B6%B2%E8%B7%AF%E7%AD%86%E8%A8%98_2/</guid><description>社群網路的圖的定義 Node - 點, 個人 Edge - 邊, 人與人的關係 TODO IMAGE Undirected graph and directed graph undirected graph - 邊沒有特定方向 directed graph - 邊具有方向性 TODO IMAGE Adjacency matrix - 用矩陣來表達圖的關係, 1 代表</description><content type="html"><![CDATA[<h1 id="社群網路的圖的定義">社群網路的圖的定義</h1>
<ul>
<li>Node - 點, 個人</li>
<li>Edge - 邊, 人與人的關係
TODO IMAGE</li>
<li>Undirected graph and directed graph
<ul>
<li>undirected graph - 邊沒有特定方向</li>
<li>directed graph - 邊具有方向性
TODO IMAGE</li>
</ul>
</li>
<li>Adjacency matrix - 用矩陣來表達圖的關係, 1 代表有連接, 0 代表沒有連接
<ul>
<li><a href="http://www.csie.ntnu.edu.tw/~u91029/Graph.html#3">詳情可參考</a></li>
</ul>
</li>
<li>Paths - 路徑, 一連串由 Edge 連接起來的 Node 組成的東西
<ul>
<li>Simple Path - 無重複點的路徑</li>
<li>Cycles - 只有起點跟終點是同一點的路徑
<ul>
<li>特點是 - redundancy - 代表這個圈就算任一邊斷掉，也是相連的</li>
<li>在社群網路中 很常見</li>
</ul>
</li>
</ul>
</li>
<li>Connected Graph - 此 Graph 上任兩點間都有 path ，使之能夠抵達另一點
<ul>
<li>大部分的社群網路都是這樣，越大越是如此</li>
<li>在社群網路中 很常見</li>
</ul>
</li>
</ul>
]]></content></item></channel></rss>